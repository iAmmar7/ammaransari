const projects = [
  {
    id: 'paint-app-realtime',
    name: 'Paint App',
    summary: '💥 An effortless real-time paint application 💥',
    features: [
      '<p>Real-time drawing interaction with all the connected users 🌈</p>',
      '<p>NodeJS <strong>cluster mode</strong> with <strong>Redis</strong> and <strong>PM2</strong> integration 🛃</p>',
      '<p>Server deployment on <strong>Heroku</strong> 🔥</p>',
      '<p>Frontend deployment on <strong>Vercel</strong> 🔥</p>',
      '<p><strong>Automatic deployment</strong> on both platforms 🏃</p>',
      '<p>Text, Brush, Pen, and Rectangle draw ✏️ 🖌️ 🔡 🟥</p>',
      '<p>Color selection 🌈</p>',
      '<p>Increase or decrease the brush size 🖌️</p>',
      '<p>Increase or decrease the text size 🔡</p>',
      '<p>Custom hook to maintain <strong>history</strong> 💻</p>',
      '<p>Both <strong>Undo</strong> and <strong>Redo</strong> feature 🔄</p>',
      '<p><strong>Clear canvas</strong> and <strong>Download canvas</strong> image feature 🖼️</p>',
    ],
    domain: 'freelance',
    technologies: ['react', 'canvas', 'node', 'express', 'socket-io', 'pm2', 'heroku', 'vercel'],
    thumbnail: '/images/projects/thumb-paint-app-realtime.png',
    code: 'https://github.com/iAmmar7/paint-app-realtime',
    url: 'https://paint-app-realtime.vercel.app',
  },
  {
    id: 'courierservice',
    name: 'Courier Service Management',
    summary: 'The Courier vendor management project for a specific client.',
    features: [
      '<p>Graphical view of over all company stats using Recharts.</p>',
      '<p>Monitor rider and vendor activities via auto-generated stats.</p>',
      '<p>Add/Remove/Edit riders and vendors data.</p>',
      '<p>Tabular view of all the orders.</p>',
      '<p>Filters for each vendor and rider orders.</p>',
      '<p>Maintain three different status for each parcel.</p>',
      '<p>Tabular view filters according to the status of parcel and vendor and/or rider associated with that parcel.</p>',
      '<p>Monthly stats view with different filters.</p>',
      '<p>Performance measurement via top vendor and rider widget.</p>',
    ],
    domain: 'freelance',
    technologies: [
      'react',
      'redux',
      'material-ui',
      'bootstrap',
      'node',
      'express',
      'mongodb',
      'mongoose',
      'heroku',
    ],
    thumbnail: '/images/projects/thumb-courierservice.png',
    code: 'https://github.com/iAmmar7/courierservice',
    url: 'https://agile-chamber-90213.herokuapp.com/',
  },
  {
    id: 'parking-app',
    name: 'Parking App',
    summary: 'Firebase cloud functions for a parking application',
    features: [
      '<p>Firebase functions</p>',
      '<p>Firebase triggers</p>',
      '<p>Firebase admin</p>',
      '<p>Firebase auth</p>',
      '<p>Firebase database</p>',
      '<p>Firebase user roles 🦹</p>',
    ],
    domain: 'freelance',
    technologies: ['node', 'firebase', 'cloud-functions', 'firebase-functions'],
    thumbnail: '/images/projects/thumb-parking-app.png',
    code: 'https://github.com/iAmmar7/parking-app',
    url: 'https://parking-app-f13ad.web.app',
  },
  {
    id: 'forecastware',
    name: 'ForecastWare',
    summary:
      '💥 Weather forecast cross-platform mobile application based on React Native with Expo Managed workflow 💥',
    features: [
      "<p>Device's <strong>current location</strong> 📌</p>",
      "<p>Location tracker using device's <strong>background location</strong> service 📌</p>",
      '<p>Temperature check on every 10000 meters location change 👾</p>',
      '<p><strong>Notification</strong> on temperature change 🌌</p>',
      '<p><strong>Background fetch</strong> job that runs after every 15 minutes to update the current location weather and display the notification ⏲️</p>',
      '<p><strong>Task manager</strong> to handle Background Fetch jobs 🥷</p>',
      '<p><strong>SQLite</strong> to store multiple locations data 🏪</p>',
      '<p>Mobile <strong>battery level monitor</strong>. The app will display a pop-up and close if the battery level goes down to 20% 🔋</p>',
      '<p><strong>Screenshot taker</strong> icon on different screens 📸</p>',
      '<p><strong>Weather map</strong> using Google Maps with different layouts for precipitation, clouds, pressure, temperature, and wind 🗺️</p>',
      "<p><strong>Barometer</strong> service to display the device's surrounding atmospheric pressure 🌡️</p>",
      '<p>In app web browser using expo-web for external links 🕸️</p>',
      '<p><strong>Sentry</strong> integration for crash report and performance monitoring 🔗</p>',
      '<p><strong>Snack</strong> integration for testing on different platforms 🔗</p>',
      '<p><strong>Search locations</strong> feature both for map and weather 🔍</p>',
      '<p>Combined <strong>custom theme</strong> using React Native Paper and React Native Navigation 🔥</p>',
      '<p><strong>Dark mode</strong> feature using Material Design practices 🔥</p>',
      '<p>The design of this app is inspired by <strong>Android Weather Application</strong> 📱</p>',
      "<p>Enabling the app theme color by user's mobile theme preference 🤳</p>",
      '<p>Store user preferences in <strong>AsyncStorage</strong> 🏬</p>',
      '<p>Temperature unit change feature; current support for Celsius, Fahrenheit, and Kelvin. 🔥</p>',
      '<p>Custom hooks 😻</p>',
      '<p>Custom lodash-like utility functions 😻</p>',
      '<p>Custom <strong>animation</strong> using Animatable library 😻</p>',
      '<p>Custom <strong>expo configuration</strong> for different platoforms 🔌</p>',
      '<p>For state management, this app is using <strong>React Context API</strong> 🧰</p>',
      '<p>The location data is being fetched from the <strong>Open Weather API</strong> 🧰</p>',
    ],
    domain: 'side-project',
    technologies: [
      'react-native',
      'expo',
      'task-manager',
      'open-weather-api',
      'sentry',
      'react-navigation',
      'react-native-paper',
      'context-api',
      'snack',
    ],
    thumbnail: '/images/projects/thumb-forecastware.jpeg',
    code: 'https://github.com/iAmmar7/forecastware',
    url: 'https://snack.expo.dev/@iammar7/forecastware_v44',
    apk: 'https://1drv.ms/u/s!Ajq4XZm81_iYgZcAtWMcejVA8hqjVQ?e=Jks2Ff',
  },
  {
    id: 'board-game',
    name: 'Board Game',
    summary: '💥 3 day challenge to build and deploy the board game. 💥',
    description:
      '<p>You’ve been selected as the new knight from King Arthur himself. Some bandits raided the local towns and stole some valuable items from the people. You need to collect those items and bring them back to the town folks. You will have to sneak into their base and collect all items without being detected, so stealth is your best friend.</p><p>Rules:</p><ol><li>Create a board of 20x20 cells.</li><li>The player will always spawn on (0,0) location of the board. (top left corner)</li><li>Enemies can spawn randomly on different locations of the board.</li><li>Items should also be spawn randomly on different locations of the board.</li><li>The player will move to the item location using keyboard (up,down,left,right) arrow keys.</li><li>You need to pick all items by moving to the cell block of the items.</li><li>Avoid touch enemies, because if you do, you’ll die immediately.</li><li>Complete the challenge in shortest amount of time.</li></ol><p>Goal: Player needs to collect all items in shortest amount of time.</p>',
    domain: 'challenge',
    technologies: [
      'react',
      'ant-design',
      'react-query',
      'node',
      'express',
      'mongodb',
      'mongoose',
      'firebase',
      'heroku',
    ],
    thumbnail: '/images/projects/thumb-board-game.png',
    code: 'https://github.com/iAmmar7/board-game',
    url: 'https://board-game-175ec.web.app',
  },
  {
    id: 'firmfigure',
    name: 'FirmFigure',
    summary: 'An automated workflow for an audit firm',
    description:
      '<p>This application is for one of the <strong>audit firms</strong> based in <strong>KSA</strong>, which helps them to <strong>automate</strong> their daily routine tasks. It also allows the admin to see the progress of each team working inside the firm.</p>',
    features: [
      '<p>Five types of users; auditor, regional managers, area managers, moderators and an admin.</p>',
      '<p>Different authorization for different user roles using express middleware.</p>',
      '<p>Different user interface for each type of user according to his/her role.</p>',
      '<p>Graphical UI for the overall company stats with different filters.</p>',
      '<p>Initiate or fill issues form as an auditor.</p>',
      '<p>Feedback form for managers.</p>',
      '<p>Multiple image upload feature with image optimization on the server.</p>',
      '<p>Tabular view of all the issues/initiatives/feedback with all sorts of filters.</p>',
      '<p>Cron job to update the report status.</p>',
      '<p>Reminder view for station managers.</p>',
      '<p>Download each report into CSV format.</p>',
      '<p>Admin panel to add or remove different users.</p>',
      "<p>Monitor all users' recent activity as an admin.</p>",
    ],
    domain: 'freelance',
    technologies: [
      'react',
      'ant-design',
      'umi-js',
      'node',
      'express',
      'mongodb',
      'mongoose',
      'cron-jobs',
      'digitalocean',
      'ssh',
    ],
    thumbnail: '/images/projects/thumb-firmfigure.png',
    code: 'https://github.com/iAmmar7/FirmFigure-FE',
    url: 'http://157.245.20.65:4000',
  },
  {
    id: 'websocket-sdk',
    name: 'WebSocket SDKs',
    summary: 'WebSocket Client SDK for both Browser/Web and Node JS',
    description:
      '3 days challenge to build a Web and Node JS SDK to handle Websocket client. 💥</p>',
    features: [
      '<p>Monorepo containing two SDKs with simulator for each 🌈</p>',
      '<p>An integrable SDK for <strong>Web</strong> application 🛠️</p>',
      '<p>An integrable SDK for <strong>Node</strong> application 🛠️</p>',
      '<p><strong>on</strong>: Listens for messages from the WebSocket server</p>',
      '<p><strong>send</strong>: Sends a message to the server</p>',
      '<p><strong>disconnect</strong>: Disconnects the client from websocket server</p>',
      '<p>SDK emits a custom event sdkready when WebSocket Client successfully connects with the WebSocket Server 🛎️</p>',
      '<p>A simulator app to see the web-sdk in action 🏃</p>',
      '<p>A simulator app to see the node-sdk in action 🏃</p>',
      '<p>Shared packages for Eslint, TSConfig, and a Utility</p>',
      '<p>Both SDKs and a Utility package is bundled with <strong>Vite</strong></p>',
      '<p>Both SDKs are being used as an external package in their respective simulator. These SDKs can be published to <strong>NPM</strong> 🔥</p>',
      '<p>Unit tests with JEST</p>',
    ],
    domain: 'challenge',
    technologies: ['ts', 'node', 'jest', 'vite', 'monorepo', 'turborepo'],
    thumbnail: '/images/projects/thumb-websocket-sdk.png',
    code: 'https://github.com/iAmmar7/websocket-sdk',
    url: '',
  },
  {
    id: 'park-cafe',
    name: 'Park Cafe',
    summary: 'Simple distribution app for Park Cafe',
    domain: 'freelance',
    technologies: ['react', 'react-query', 'context-api', 'material-ui', 'firebase'],
    thumbnail: '/images/projects/thumb-park-cafe.png',
    code: 'https://github.com/iAmmar7/park-cafe',
    url: 'https://parkcafe.web.app',
  },
  {
    id: 'microfrontends-init',
    name: 'Microfrontends Init',
    summary:
      'A Single-SPA based micro-frontends application developed with React, Angular, and Vue.',
    features: [
      '<p><strong>3 microfrontends</strong> running inside the root-config. 🔥</p>',
      '<p><strong>2 shared utility modules</strong> are used by all microfrontends. ⚓</p>',
      '<p>Navbar is built with <strong>VueJS</strong>. 🔥</p>',
      '<p>Auth module is built with <strong>React</strong>. ❤️</p>',
      '<p>Attendance module is built with <strong>Angular</strong>. ❤️‍🔥</p>',
      '<p>Home page is being rendered from the root-config. ⛓️</p>',
      '<p>Style guide shared module is built with <strong>Tailwind</strong>. 🔹</p>',
      '<p>API shared module is using Axios. 📲</p>',
      '<p>JSON server to perform authentication. 💥</p>',
    ],
    domain: 'side-project',
    technologies: [
      'react',
      'angular',
      'vue',
      'tailwind',
      'microfrontends',
      'single-spa',
      'node',
      'json-server',
    ],
    thumbnail: '/images/projects/thumb-microfrontends-init.png',
    code: 'https://github.com/iAmmar7/microfrontends-init',
  },
  {
    id: 'vaccify',
    name: 'Vaccify',
    summary: 'An open-standard digital travel pass for COVID',
    contribution:
      'Open source application where I contributed on the Frontend side with React and Reactstrap',
    technologies: ['react', 'reactstrap', 'blockchain', 'open-source'],
    domain: 'open-source',
    thumbnail: '/images/projects/thumb-vaccify.png',
    code: 'https://github.com/TrustNetPK',
    url: 'https://vaccify.pk',
  },
  {
    id: 'shoplaza',
    name: 'Shoplaza',
    summary: 'A basic view of multi vendor e-commerce mobile application 💥',
    features: [
      '<p>Authentication and Authorization with <strong>Firebase</strong> 🔥</p>',
      '<p><strong><CRUD</strong> operation for products 🛠️</p>',
      '<p><strong>AsyncStorage</strong> to store the auth token 🏪</p>',
      '<p>Add to cart and place order feature 🎁</p>',
      '<p>Admin view to add/modify/delete currently logged in user products 💯</p>',
      '<p><strong>Dark mode</strong> using <strong>React Context API</strong> 🔥</p>',
      '<p>This app is using the <strong>Open Sans</strong> font for all the text 🔠</p>',
      '<p>For state management, this app has been integrated with <strong>Redux</strong> using Redux Toolkit 🟣</p>',
    ],
    domain: 'side-project',
    technologies: [
      'react-native',
      'redux',
      'context-api',
      'expo',
      'react-navigation',
      'redux-toolkit',
      'firebase',
      'snack',
    ],
    thumbnail: '/images/projects/thumb-shoplaza.jpeg',
    code: 'https://github.com/iAmmar7/shoplaza',
    url: 'https://snack.expo.dev/@iammar7/shoplaza',
  },
  {
    id: 'redis-chat-challenge',
    name: 'Redis Chat Challenge',
    summary: 'A real-time chat application',
    description:
      '<p>Two day <a href="https://rb-hackfest.devpost.com">Hackathon</a> challenge to create a real-time chat application using Redis. 💥</p>',
    features: [
      '<p>Real-time chat with all the connected users 🌈</p>',
      '<p>NodeJS server with <strong>Redis</strong> and <strong>Socket IO</strong> integration 🛃</p>',
      '<p>Server deployment on <strong>Heroku</strong> 🔥</p>',
      '<p>Frontend deployment on <strong>Vercel</strong> 🔥</p>',
      '<p><strong>Automatic deployment</strong> on both platforms 🏃</p>',
      '<p>Create custom channel feature.</p>',
      '<p>Search in chat feature.</p>',
      '<p>Participant count feature.</p>',
    ],
    domain: 'challenge',
    technologies: ['node', 'express', 'redis', 'socket-io', 'react', 'heroku', 'vercel'],
    thumbnail: '/images/projects/thumb-redis-chat-challenge.png',
    code: 'https://github.com/iAmmar7/redis-chat-challenge',
    url: 'https://redis-chat-challenge-ll7n94qro-iammar7.vercel.app',
  },
  {
    id: 'leaflet-distortable-image',
    name: 'Leaflet.DistortableImage',
    summary: 'An open-source Leaflet extension to distort or "rubber sheet" images',
    contribution:
      'Contributed as a JavaScript developer and fixed one of the issues related to the drag handler',
    domain: 'open-source',
    technologies: ['js', 'leaflet', 'open-source'],
    thumbnail: '/images/projects/thumb-Leaflet.DistortableImage.png',
    code: 'https://github.com/publiclab/Leaflet.DistortableImage',
    url: 'https://publiclab.github.io/Leaflet.DistortableImage/examples/',
  },
  {
    id: 'stopwatch',
    name: 'Stopwatch',
    summary: 'A straightforward stopwatch application with laps history using Vanilla JS and Sass.',
    features: [
      '<p>Time laps</p>',
      '<p>Difference between the last time lapse.</p>',
      '<p>Built with pure JS and Sass.</p>',
      '<p>Responsive layout for mobile screen.</p>',
      '<p>LocalStorage usage to store the last timer and last history.</p>',
      '<p>Continue from the last time stored in LocalStorage.</p>',
    ],
    domain: 'side-project',
    technologies: ['js', 'sass', 'github-pages'],
    thumbnail: '/images/projects/thumb-stopwatch.png',
    code: 'https://github.com/iAmmar7/stopwatch',
    url: 'https://iammar7.github.io/stopwatch',
  },
  {
    id: 'careempay-sdk',
    name: 'CareemPay SDK',
    summary: 'Integratable SDK for CareemPay merchants',
    description:
      '<p>An SDK for a merchant to integrate online checkout with CareemPay on any application. This SDK enables any business provider to allow their customers to pay via CareemPay.</p>',
    contribution: [
      '<p>Responsible to build and maintain the whole flow of “pay with careem” with other team members.</p>',
      '<p>Integration with bank cards and handle the scenario of both 3DS and Non-3DS cards.</p>',
      '<p>Built the payment-only feature within the checkout application.</p>',
      '<p>Integrated the crash reporting library in payment module. </p>',
    ],
    domain: 'company-based',
    company: 'Careem',
    technologies: [
      'ts',
      'react',
      'next',
      'context-api',
      'tailwind',
      'swr',
      'jest',
      'react-testing-library',
      'vite',
      'monorepo',
      'turborepo',
    ],
    thumbnail: '/images/projects/thumb-careempay-sdk.png',
    url: 'https://1click.careem.com',
  },
  {
    id: 'careempay-merchant-portal',
    name: 'CareemPay Merchant Portal',
    summary: 'Dashboard for CareemPay merchants',
    description:
      '<p>A portal application for a merchant who has integrated the CareemPay SDK in his application.</p>',
    contribution: [
      '<p>Setup the whole application with NextJS.</p>',
      '<p>Configuration of UI library.</p>',
      '<p>Create and maintain the generic React components that can be consumed across all the apps at Careem.</p>',
      '<p>Unit test configuration with JEST and RTL.</p>',
    ],
    domain: 'company-based',
    company: 'Careem',
    technologies: [
      'ts',
      'react',
      'next',
      'context-api',
      'tailwind',
      'swr',
      'jest',
      'react-testing-library',
      'vite',
      'monorepo',
      'turborepo',
    ],
    thumbnail: '',
    url: '',
  },
  {
    id: 'careem-identity',
    name: 'Identity Careem',
    summary: 'Auth provider for all Careem services',
    description:
      '<p>Authentication and Authorization provider for all the applications of Careem. A kind of middleware application used by all Careem services to authenticate and authorize users.</p>',
    contribution: [
      '<p>Contributed to this team as front-end engineer for one-click login feature.</p>',
      '<p>Revamped the previous version of this application.</p>',
      '<p>Integrated the API request polling for authentication via mobile push notification.</p>',
      '<p>Configuration of events for analytics.</p>',
      '<p>Increased the user conversion rate by implementing the web-to-app redirection feature.</p>',
    ],
    domain: 'company-based',
    company: 'Careem',
    technologies: ['react', 'material-ui', 'jest', 'react-testing-library'],
    thumbnail: '/images/projects/thumb-careem-identity.png',
    url: 'https://identity.careem.com',
  },
  {
    id: 'dari',
    name: 'DARI',
    summary: 'Real estate application',
    description:
      '<p>Real estate management project for the Government of UAE by the company ADRES.</p>',
    contribution: [
      '<p>Optimization and generic components development.</p>',
      '<p>Assist the team with optimization techniques using the latest features of React.</p>',
      '<p>Implemented the API Cache and automatic auth token re-fetch strategy.</p>',
      '<p>Integrated the payment module on both the Frontend and Backend sides of an application with ADPay.</p>',
      '<p>Designed and developed the entire API-driven UI architecture.</p>',
    ],
    domain: 'company-based',
    company: 'ADRES',
    technologies: ['react', 'node', 'material-ui', 'redux', 'express'],
    thumbnail: '/images/projects/thumb-dari.png',
    url: 'https://www.dari.ae',
  },
  {
    id: 'vendians',
    name: 'Vendians',
    summary: 'Employee management application',
    description: '<p>Internal employee management portal for the employees of VentureDive.</p>',
    contribution: [
      '<p>RESTful API creation for different modules.</p>',
      '<p>Design and develop new UI components.</p>',
      '<p>Fixed a legacy code bug in one of the UI components.</p>',
      '<p>Implemented a “similar questions” feature using NLP with Python.</p>',
    ],
    domain: 'company-based',
    company: 'VentureDive',
    technologies: [
      'react',
      'redux',
      'ant-design',
      'node',
      'express',
      'mysql',
      'sequelize',
      'python',
      'nlp',
    ],
    thumbnail: '/images/projects/thumb-vendians.png',
    url: 'https://vendians.com',
    current: true,
  },
  {
    id: 'go',
    name: 'GO',
    summary: 'EHR application for healthcare sector',
    description:
      '<p>An electronic healthcare record information management application for patients and doctors in the United States of America.</p>',
    contribution: [
      '<p>Design, develop and maintain software using various tools and techniques with the USA-based team.</p>',
      '<p>Mainly focus on the front-end side development.</p>',
      '<p>Collaborate with multiple teams to provide generic solutions.</p>',
      '<p>Conduct dev sessions to elaborate and explain new generic features.</p>',
    ],
    domain: 'company-based',
    company: 'CareCloud Inc',
    technologies: ['react', 'context-api', 'sass', 'graphql', 'apollo'],
    thumbnail: '/images/projects/thumb-go.png',
    url: 'https://www.carecloud.com/go',
  },
  {
    id: 'parhako',
    name: 'Parhako',
    summary: 'E-learning platform',
    description:
      '<p>An e-learning platform for students and teachers with features like Q&A, tuitions, public chat, etc.</p>',
    contribution: [
      '<p>Worked on both the front-end side and back-end side of this project.</p>',
      '<p>Responsible for all the backend operations, from database designing to input validation and API response.</p>',
      '<p>Build and maintain MongoDB and GraphQL schemas.</p>',
      '<p>Implement user authorization and authentication with JWT and OAuth.</p>',
      '<p>Migrated an old React application to React Hooks.</p>',
      '<p>Added language locale feature on the frontend side with React Context API.</p>',
      '<p>Real-time user activity feature with GraphQL subscription and Redis.</p>',
      '<p>Solved real-time data fetching problem with Apollo GraphQL subscription on Parhako’s mobile application with React-Native.</p>',
      '<p>Application deployment on Amazon EC2 machines.</p>',
    ],
    domain: 'company-based',
    company: 'Plan Z Creatives',
    technologies: [
      'react',
      'context-api',
      'graphql',
      'apollo',
      'next',
      'ant-design',
      'styled-components',
      'react-native',
      'node',
      'express',
      'cron-jobs',
      'mongodb',
      'mongoose',
      'redis',
      'woocommerce-api',
      'aws-ec2',
      'pm2',
      'ssh',
    ],
    thumbnail: '/images/projects/thumb-parhako.png',
    code: 'https://github.com/Parhako',
    url: '',
  },
  {
    id: 'vyyral',
    name: 'Vyyral',
    summary: 'Dashboard for Amazon seller central',
    description:
      '<p>Powerful Amazon analytics tool to boost sales at Amazon. Vyyral helps combine different costs and expenses incurred on a business sale and present it in a comprehensive way to make it dynamic.</p>',
    contribution: [
      '<p>Mainly focus on the server-side development.</p>',
      '<p>RESTful API creation with complex queries using MongoDB aggregation.</p>',
      '<p>Implemented a “trial version” feature on the back-end side using the Express middlewares.</p>',
      '<p>Cron jobs creation for multiple features.</p>',
      '<p>Recurring  payment module feature integration with Stripe.</p>',
      '<p>Application deployment on Amazon EC2 machines.</p>',
      '<p>SSL integration with Nginx.</p>',
    ],
    domain: 'company-based',
    company: 'Plan Z Creatives',
    technologies: [
      'react',
      'redux',
      'node',
      'express',
      'mongodb',
      'mongoose',
      'cron-jobs',
      'socket-io',
      'nodemailer',
      'stripe',
      'swagger',
      'aws-ec2',
      'pm2',
      'ssh',
      'nginx',
      'ssl',
    ],
    thumbnail: '/images/projects/thumb-vyyral.png',
    url: 'https://vyyral.com',
  },
  {
    id: 'portfolio',
    name: 'Ammar Ansari',
    summary: '🔥 Personal website - Portfolio 🔥',
    description:
      '<p>Did you mean: <i><a href="https://ammaransari.vercel.app" style="color: #8f9ba8; text-decoration: underline;">Ammar Ansari</a></i></p>',
    domain: 'side-project',
    technologies: ['react', 'next', 'tailwind', 'framer-motion', 'resend'],
    thumbnail: '/images/projects/thumb-portfolio.png',
    code: 'https://github.com/iAmmar7/ammaransari',
    url: 'https://ammaransari.vercel.app',
  },
  {
    id: 'video-sdk',
    name: 'Video SDK',
    summary: 'JS SDK that allows you to integrate WebRTC Video calling in your web application.',
    description:
      'The Video SDK contains the classes and functions that you need to create a video conferencing application.',
    contribution: [
      '<p>Fully responsible for the entire lifecycle of the Video SDK, from development to deployment.</p>',
      '<p>Implemented a feature allowing users to connect to WebRTC using only TCP transport, enhancing connectivity options.</p>',
      '<p>Played a key role in the core coding aspects of the SDK, contributing significantly to its robust functionality.</p>',
      '<p>Developed an innovative image mirror feature, adding advanced capabilities to the SDK.</p>',
      "<p>Responsible for the SDK's deployment to NPM, ensuring its accessibility and ease of use for developers.</p>",
      '<p>Managed CI/CD processes, ensuring efficient and reliable development workflows.</p>',
    ],
    domain: 'company-based',
    company: 'SignalWire',
    technologies: ['webrtc', 'websocket', 'ts', 'redux-saga', 'jest', 'playwright'],
    thumbnail: '/images/projects/thumb-video-sdk.png',
    url: 'https://developer.signalwire.com/sdks/reference/browser-sdk/video/',
    code: 'https://www.npmjs.com/package/@signalwire/js',
    spotlight: true,
  },
  {
    id: 'chat-sdk',
    name: 'Chat SDK',
    summary: 'JS SDK that allows you to integrate Chating features in your web application.',
    description:
      'The Chat SDK contains the classes and functions that you need to create a real-time chat application',
    contribution: [
      '<p>Fully responsible for the entire lifecycle of the Chat SDK, from development to deployment.</p>',
      '<p>Implemented robust unit and end-to-end testing to ensure reliability and performance.</p>',
      '<p>Managed the deployment of the SDK to NPM, ensuring easy accessibility for developers.</p>',
      '<p>Handled CI/CD processes, streamlining continuous development and integration workflows.</p>',
    ],
    domain: 'company-based',
    company: 'SignalWire',
    technologies: ['websocket', 'ts', 'redux-saga', 'jest', 'playwright'],
    thumbnail: '/images/projects/thumb-chat-sdk-browser.png',
    url: 'https://developer.signalwire.com/sdks/reference/browser-sdk/chat/',
    code: 'https://www.npmjs.com/package/@signalwire/js',
  },
  {
    id: 'pubsub-sdk',
    name: 'PubSub SDK',
    summary: 'JS SDK that allows you to integrate messaging system in your web application.',
    description:
      'The PubSub SDK contains the classes and functions that you need to create a real-time messaging system into your browser.',
    contribution: [
      '<p>Building, fixing, and managing of the PubSub SDK, overseeing all aspects of its development.</p>',
      '<p>Ensured high-quality and reliability through comprehensive unit and end-to-end testing.</p>',
      "<p>Managed the SDK's NPM deployment, facilitating its distribution and implementation.</p>",
      '<p>Developed and maintained CI/CD pipelines, enhancing development efficiency and reliability.</p>',
    ],
    domain: 'company-based',
    company: 'SignalWire',
    technologies: ['websocket', 'ts', 'redux-saga', 'jest', 'playwright'],
    url: 'https://developer.signalwire.com/sdks/reference/browser-sdk/pubsub/',
    code: 'https://www.npmjs.com/package/@signalwire/js',
  },
  {
    id: 'video-sdk-node',
    name: 'Video SDK - Node',
    summary: 'Realtime SDK to listen for and react to events from the browser based Video SDK.',
    description:
      'Access the Video API Consumer. You can instantiate a Video.Client to subscribe to Video events. Make sure to check the full list of events that a Video.Client can subscribe to.',
    contribution: [
      '<p>Fully responsible for the entire lifecycle of the server-based Video SDK, from development to deployment.</p>',
      '<p>Implemented robust unit and end-to-end testing to ensure reliability and performance.</p>',
      '<p>Managed the deployment of the SDK to NPM, ensuring easy accessibility for developers.</p>',
      '<p>Handled CI/CD processes, streamlining continuous development and integration workflows.</p>',
    ],
    domain: 'company-based',
    company: 'SignalWire',
    technologies: ['websocket', 'node', 'redux-saga', 'ts', 'jest', 'playwright'],
    thumbnail: '/images/projects/thumb-video-sdk.png',
    url: 'https://developer.signalwire.com/sdks/reference/realtime-sdk/video/',
    code: 'https://www.npmjs.com/package/@signalwire/realtime-api',
  },
  {
    id: 'voice-sdk',
    name: 'Voice SDK',
    summary:
      'Realtime SDK to listen for and react to events from the Voice calling SignalWire APIs.',
    description:
      'Access the Voice API. You can instantiate a Voice.Client to make or receive calls. Please see Events for the list of events emitted by a Voice.Client object.',
    contribution: [
      '<p>Played a pivotal role in the entire lifecycle of the Voice SDK, focusing on development, testing, and deployment.</p>',
      '<p>Specialized in handling long-running processes crucial for managing calls, utilizing advanced JavaScript promise mechanisms.</p>',
      '<p>Developed a modified JS promise structure to enhance user control over call actions like playback, recording, etc.</p>',
      '<p>Implemented robust unit and end-to-end testing to ensure SDK reliability and performance.</p>',
      "<p>Managed the SDK's deployment to NPM, facilitating its widespread availability and ease of integration.</p>",
      '<p>Handled CI/CD processes, ensuring efficient and continuous development and integration workflows.</p>',
    ],
    domain: 'company-based',
    company: 'SignalWire',
    technologies: ['websocket', 'node', 'redux-saga', 'ts', 'jest', 'playwright'],
    url: 'https://developer.signalwire.com/sdks/reference/realtime-sdk/voice/',
    code: 'https://www.npmjs.com/package/@signalwire/realtime-api',
    spotlight: true,
  },
  {
    id: 'messaging-sdk',
    name: 'Messaging SDK',
    summary: 'Realtime SDK to listen for and react to events from the Messaging SignalWire APIs.',
    description:
      'Access the Messaging API. You can instantiate a Messaging.Client to send or receive SMS and MMS. Please check Messaging Events for the full list of events that a Messaging.Client can subscribe to.',
    contribution: [
      '<p>Responsible for the entire development cycle of the Messaging SDK, ensuring its alignment with project objectives and user needs.</p>',
      '<p>Developed core functionalities allowing users to send text messages using the SignalWire API.</p>',
      '<p>Implemented and oversaw comprehensive unit and end-to-end testing, ensuring high standards of SDK reliability and performance.</p>',
      "<p>Managed the SDK's deployment to NPM, providing easy access and integration for developers.</p>",
      '<p>Handled the CI/CD processes, maintaining an efficient and seamless development pipeline.</p>',
    ],
    domain: 'company-based',
    company: 'SignalWire',
    technologies: ['websocket', 'node', 'redux-saga', 'ts', 'jest', 'playwright'],
    url: 'https://developer.signalwire.com/sdks/reference/realtime-sdk/messaging/',
    code: 'https://www.npmjs.com/package/@signalwire/realtime-api',
  },
  {
    id: 'chat-sdk-node',
    name: 'Chat SDK - Node',
    summary:
      'Realtime SDK that allows you to integrate Chating features in your Node JS application.',
    description:
      'Access the Chat API Consumer. You can instantiate a Chat.Client to subscribe to Chat events. Please check Chat Events for the full list of events that a Chat.Client can subscribe to.',
    contribution: [
      '<p>Responsible for the full development lifecycle of the NodeJS-based Chat SDK, tailoring it specifically for server-side environments.</p>',
      "<p>Ensured the SDK's compatibility and performance within Node.js, emphasizing backend integrations.</p>",
      '<p>Implemented comprehensive unit and end-to-end testing, focusing on server-side reliability and scalability.</p>',
      "<p>Managed the SDK's deployment to NPM, catering to the needs of Node.js developers and ensuring seamless integration.</p>",
      '<p>Overseen the CI/CD processes, adapting them for NodeJS specific requirements and workflows.</p>',
    ],
    domain: 'company-based',
    company: 'SignalWire',
    technologies: ['websocket', 'ts', 'redux-saga', 'jest', 'playwright'],
    thumbnail: '/images/projects/thumb-chat-sdk-browser.png',
    url: 'https://developer.signalwire.com/sdks/reference/browser-sdk/chat/',
    code: 'https://www.npmjs.com/package/@signalwire/realtime-api',
  },
  {
    id: 'pubsub-sdk-node',
    name: 'PubSub SDK - Node',
    summary:
      'Realtime SDK that allows you to integrate PubSub features in your Node JS application.',
    description:
      'Access the PubSub API Consumer. You can instantiate a PubSub.Client to subscribe to PubSub events. Please check PubSub Events for the full list of events that a PubSub.Client can subscribe to.',
    contribution: [
      '<p>Fully responsible for the entire lifecycle of the NodeJS-based PubSub SDK, from concept to deployment.</p>',
      "<p>Ensured the SDK's compatibility and optimized performance within Node.js, focusing on efficient message passing and event handling.</p>",
      '<p>Implemented robust unit and end-to-end testing to guarantee server-side reliability and effectiveness.</p>',
      '<p>Managed the deployment of the SDK to NPM, ensuring it meets the specific needs of Node.js developers.</p>',
      '<p>Handled the CI/CD processes, customizing them for Node.js-specific development and operational demands.</p>',
    ],
    domain: 'company-based',
    company: 'SignalWire',
    technologies: ['websocket', 'ts', 'redux-saga', 'jest', 'playwright'],
    url: 'https://developer.signalwire.com/sdks/reference/browser-sdk/pubsub/',
    code: 'https://www.npmjs.com/package/@signalwire/realtime-api',
  },
  {
    id: 'task-sdk',
    name: 'Task SDK',
    summary:
      'Realtime SDK that allows you to integrate SignalWire Task features in your Node JS application.',
    description:
      'Access the Task API. You can instantiate a Task.Client to receive tasks from a different application. Please check Task Events for the full list of events that a Task.Client can subscribe to.',
    contribution: [
      '<p>Fully responsible for the entire lifecycle of the NodeJS-based Task SDK, from initial development to final deployment.</p>',
      "<p>Ensured the SDK's compatibility and optimized performance within Node.js, focusing on efficient task management and event handling.</p>",
      '<p>Implemented robust unit and end-to-end testing to ensure server-side reliability and high efficiency.</p>',
      "<p>Managed the SDK's deployment to NPM, catering to the specific needs and requirements of Node.js developers.</p>",
      '<p>Handled the CI/CD processes, adapting them to suit NodeJS-specific development standards and practices.</p>',
    ],
    domain: 'company-based',
    company: 'SignalWire',
    technologies: ['websocket', 'ts', 'redux-saga', 'jest', 'playwright'],
    url: 'https://developer.signalwire.com/sdks/reference/browser-sdk/task/',
    code: 'https://www.npmjs.com/package/@signalwire/realtime-api',
  },
  {
    id: 'signalwire-core',
    name: 'SignalWire Core',
    summary: 'Shared utility library for all the SignalWire SDKs',
    description:
      'The SignalWire Core package contains lower level objects and shared utilities for various @signalwire packages.',
    contribution: [
      '<p>Fully responsible for the development, management, and maintenance of the SignalWire Core package.</p>',
      '<p>Developed essential utility functions and classes that form the backbone of all SignalWire SDKs.</p>',
      '<p>Implemented a range of generic code solutions, significantly enhancing the functionality and efficiency of the SDKs.</p>',
      "<p>Ensured the package's compatibility and optimized performance across various SignalWire SDKs.</p>",
      '<p>Conducted robust unit and end-to-end testing to guarantee high reliability and performance.</p>',
      '<p>Managed the deployment of the package to NPM, ensuring seamless integration across all SDKs.</p>',
      '<p>Handled CI/CD processes, ensuring continuous development and integration aligns with best practices.</p>',
    ],
    domain: 'company-based',
    company: 'SignalWire',
    technologies: ['websocket', 'ts', 'redux-saga', 'jest', 'playwright'],
    code: 'https://www.npmjs.com/package/@signalwire/core',
  },
  {
    id: 'signalwire-webrtc',
    name: 'SignalWire WebRTC',
    summary: 'Shared WebRTC-related utility library for all the JS SignalWire SDKs.',
    description:
      'The SignalWire WebRTC package contains the various WebRTC object used by other SignalWire packages.',
    contribution: [
      '<p>Fully responsible for the development, management, and maintenance of the SignalWire WebRTC package, specifically focusing on WebRTC utilities.</p>',
      "<p>Developed crucial WebRTC-related utility functions and classes, crucial for the enhancement of SignalWire's real-time communication features.</p>",
      '<p>Implemented specialized WebRTC code solutions, significantly boosting the functionality and efficiency of SignalWire SDKs in real-time communication scenarios.</p>',
      '<p>Ensured optimal compatibility and performance of the WebRTC utilities across different SignalWire SDKs.</p>',
      '<p>Conducted comprehensive unit and end-to-end testing to ensure the reliability and performance of WebRTC components.</p>',
      '<p>Managed the deployment of the package to NPM, focusing on seamless integration with WebRTC functionalities in all SignalWire SDKs.</p>',
      '<p>Handled the CI/CD processes, aligning them with the unique requirements of WebRTC development and integration.</p>',
    ],
    domain: 'company-based',
    company: 'SignalWire',
    technologies: ['webrtc', 'ts', 'redux-saga', 'jest', 'playwright'],
    code: 'https://www.npmjs.com/package/@signalwire/webrtc',
  },
  {
    id: 'callfabric-sdk',
    name: 'CallFabric SDK',
    summary:
      'A browser based JavaScript SDK that allows developers to integrate SignalWire Call Fabric in their applications.',
    description:
      'Call Fabric is a layer on top of other SignalWire SDKs that allows you to provide Unified Communication as a Service (UCaaS) to your customers. Therefore, the Call Fabric SDK can also be referred to as the UCaaS SDK. With Call Fabric, not only you can make video calls but you can also make other types of communication offered by the SignalWire such as voice call, messaging, chat, etc.',
    contribution: [
      '<p>Fully responsible for the development, management, and maintenance of the CallFabric SDK, focusing on unified communications.</p>',
      '<p>Developed and implemented functionalities that unify server events across different communication types like voice, video, chat, and messaging for easier integration.</p>',
      '<p>Ensured seamless integration and interoperability of the CallFabric SDK with existing SignalWire SDKs, enhancing UCaaS capabilities.</p>',
      '<p>Conducted extensive unit and end-to-end testing to ensure the reliability and performance of unified communication features.</p>',
      '<p>Managed the deployment of the SDK to NPM, ensuring that it meets the diverse needs of developers in implementing UCaaS solutions.</p>',
      '<p>Handled CI/CD processes, ensuring they are aligned with the specific requirements of unified communication development and integration.</p>',
    ],
    domain: 'company-based',
    company: 'SignalWire',
    technologies: ['webrtc', 'ts', 'websocket', 'redux-saga', 'jest', 'playwright'],
    thumbnail: '/images/projects/thumb-callfabric-sdk.png',
    code: 'https://www.npmjs.com/package/@signalwire/js',
    spotlight: true,
  },
  {
    id: 'signalwire-sdk-playgrounds',
    name: 'SignalWire SDK playgrounds',
    summary: 'Playgrounds or demo applications for all the SignalWire browser-based SDKs',
    description: 'Install SDKs from the NPM and consume it as an end developer',
    contribution: [
      '<p>Fully responsible for building and managing the SDK playgrounds.</p>',
      '<p>Integrate push notifications with Firebase to handle the incoming call.</p>',
      '<p>Deploy playgrounds on GitHub pages.</p>',
      '<p>Handled CI/CD processes, and published GitHub branch code to GitHub pages.</p>',
    ],
    domain: 'company-based',
    company: 'SignalWire',
    technologies: ['ts', 'firebase', 'github-pages'],
    thumbnail: '/images/projects/thumb-sdk-playgrounds.png',
    code: 'https://github.com/signalwire/signalwire-js/tree/main/internal',
  },
];

export default projects;
